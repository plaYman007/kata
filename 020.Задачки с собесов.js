/*

•	Какое будет выведено значение: let x = 5; alert( x++ ); : значение будет 5, т.к. такая форма записи сначала выводит значение x,
и только потом приплюсовывает к нему единицу. А вот если бы было alert(++x) - тогда было бы 6.

•	Чему равно такое выражение: [ ] + false - null + true : когда мы работаем с пустым массивом [ ] - он будет приведен к строковому типу данных.
Т.е сначала при сложении [ ] с false - мы получим просто false, т.к. " " + false = "false"
Потом мы вычетаем - null, у которого значение number, соответственно, консоль выдаст NaN.
И в конце приплюсовываем true - если к NaN прибавить true - будет всё равно NaN.

•	Что выведет этот код: let y = 1; let x = y = 2; alert(x); : учимся читать
Т.к. число - примитивный тип данных, то он просто передаётся по значению. Т.е. сначала мы присвоили y=1, затем y=2, а уже в конце присвоили x=y.
Т.е. ответ будет: 2.

•	Чему равна сумма [ ] + 1 + 2 : опять же - мы строку складываем с числом. т.е. " " + 1 - будет 1.
Соответственно - "1" + 2 - будет "12"

•	Что выведет этот код: alert( "1"[0] ) : тут мы обращаемся к элементу строки по его индексу. т.е. [0] - обращение к индесу строки "1". 
Т.е. выведется 1.

•	Чему равно 2 && 1 && null && 0 && undefined : тут всё просто, золотое правило гласит, что оператор && запинается на лжи, т.е. он выведет первое
значение равное false - а это null.

•	Есть ли разница между выражениями? !!( a && b ) и (a && b) : да, два знака !!(не) превращают следующее выражение в boolean.
И оно априори не будет равняться значению a && b

•	Что выведет этот код: alert( null || 2 && 3 || 4 ); : сначала, по таблице приоритетов, идёт &&, уже потом ||
Соответственно, 2 && 3 - будет 3. Соответственно, потом будет null || 3, т.к. первое действие уже было произведено
|| запинается на правде, поэтому будет 3. Далее будет 3 || 4 - соответственно, конечный результат так и останется 3.

•	a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b : Нет, т.к. у нас есть 2 РАЗНЫХ хранилища информации, которые просто содержат одинаковые данные.
К примеру - a - это ящик с яблоками, b - это тоже ящик с яблоками. Содержимое одинаковое, но ящики-то разные :)

•	Что выведет этот код: alert( +"Infinity" ); : "Infinity" - это просто строка. Плюс перед ней преобразует тип данных в числовой.
Но это никак не повлияет на то, что выдаст алерт, а именно - Infinity.

•	Верно ли сравнение: "Ёжик" > "яблоко"? : Вообще пиздец. Оказывается, строки сравниваются ПО СИМВОЛЬНО БЛЯТЬ. 
Если бы первые две буквы были одинаковые - сравнение продолжилось бы дальше, по вторым буквам...
То есть сначала идёт сравнение "Ё" с "я" - т.к. по юникоду Я > ё - то получается, что false... Если попадается такой маразм - открываем таблицу с символами Unicode.

•	Чему равно 0 || "" || 2 || undefined || true || falsе : тут всё просто - ответ 2. Не забываем, что пустая строка "" - тоже false.
*/
